/**
 * Dogs app
 * This is the API definition of the dogs owners app.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import User from './User';

/**
 * The ChatMessage model module.
 * @module model/ChatMessage
 * @version 1.0
 */
class ChatMessage {
    /**
     * Constructs a new <code>ChatMessage</code>.
     * @alias module:model/ChatMessage
     * @param sender {module:model/User} 
     * @param receiver {module:model/User} 
     * @param message {String} 
     */
    constructor(sender, receiver, message) { 
        
        ChatMessage.initialize(this, sender, receiver, message);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sender, receiver, message) { 
        obj['sender'] = sender;
        obj['receiver'] = receiver;
        obj['message'] = message;
    }

    /**
     * Constructs a <code>ChatMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChatMessage} obj Optional instance to populate.
     * @return {module:model/ChatMessage} The populated <code>ChatMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChatMessage();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('sender')) {
                obj['sender'] = User.constructFromObject(data['sender']);
            }
            if (data.hasOwnProperty('receiver')) {
                obj['receiver'] = User.constructFromObject(data['receiver']);
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('timeStamp')) {
                obj['timeStamp'] = ApiClient.convertToType(data['timeStamp'], 'Date');
            }
            if (data.hasOwnProperty('unread')) {
                obj['unread'] = ApiClient.convertToType(data['unread'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
ChatMessage.prototype['id'] = undefined;

/**
 * @member {module:model/User} sender
 */
ChatMessage.prototype['sender'] = undefined;

/**
 * @member {module:model/User} receiver
 */
ChatMessage.prototype['receiver'] = undefined;

/**
 * @member {String} message
 */
ChatMessage.prototype['message'] = undefined;

/**
 * @member {Date} timeStamp
 */
ChatMessage.prototype['timeStamp'] = undefined;

/**
 * @member {Boolean} unread
 */
ChatMessage.prototype['unread'] = undefined;






export default ChatMessage;

